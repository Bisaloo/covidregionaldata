% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_uk_regional_cases.R
\name{get_uk_regional_cases}
\alias{get_uk_regional_cases}
\title{Get UK daily cases}
\usage{
get_uk_regional_cases(geography = "regional")
}
\arguments{
\item{geography}{Character string identifying the scale at which to extract data. Defaults to "regiona" with "utla" also
supported.}
}
\value{
A dataframe of case counts in English and Scottish regions, and Wales and Northern Ireland
}
\description{
Get UK regional cases.
}
\examples{
get_uk_regional_cases

\dontrun{
uk <- get_uk_regional_cases(geography = "regional") \%>\%
  dplyr::filter(date == max(date - 3))
eng_kml <- "https://opendata.arcgis.com/datasets/4fcca2a47fed4bfaa1793015a18537ac_4.kml?outSR=\%7B\%22latestWkid\%22\%3A27700\%2C\%22wkid\%22\%3A27700\%7D"
download.file(eng_kml, "uk_regions.kml")
eng_kml <- sf::st_read("uk_regions.kml")
region_names <- c("North East", "North West", "Yorkshire and The Humber", "East Midlands", "West Midlands", "East of England", "London", "South East", "South West")
eng_kml$Name <- region_names
eng_kml_data <- dplyr::left_join(eng_kml, uk, by = c("Name" = "region"))

ggplot2::ggplot(data = eng_kml_data, ggplot2::aes(fill = cases)) +
  ggplot2::geom_sf()
}

}
